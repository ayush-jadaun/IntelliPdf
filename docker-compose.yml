version: "3.9"

services:
  postgres:
    image: ankane/pgvector
    container_name: postgres
    environment:
      POSTGRES_USER: intellipdf
      POSTGRES_PASSWORD: securepass
      POSTGRES_DB: intellipdf_db
    ports:
      - "5432:5432"
    networks:
      - intellipdf-net
    volumes:
      - pgdata:/var/lib/postgresql/data

  neo4j:
    image: neo4j:5
    container_name: neo4j
    environment:
      NEO4J_AUTH: neo4j/testpass123
    ports:
      - "7687:7687"
      - "7474:7474"
    networks:
      - intellipdf-net
    volumes:
      - neo4jdata:/data

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - intellipdf-net
    volumes:
      - miniodata:/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      # Enable BuildKit for better caching
      cache_from:
        - intellipdf-backend:latest
    image: intellipdf-backend:latest
    container_name: backend
    env_file:
      - .env
    depends_on:
      - postgres
      - neo4j
      - minio
    ports:
      - "8000:8000"
    networks:
      - intellipdf-net
    restart: unless-stopped
    # For development: mount code as volume to avoid rebuilds
    # volumes:
    #   - ./backend/app:/app/app:ro

networks:
  intellipdf-net:
    driver: bridge

volumes:
  pgdata:
  neo4jdata:
  miniodata: